{"version":3,"sources":["Components/CreateMap.js","App.js","reportWebVitals.js","index.js"],"names":["CreateMap","className","map","backgroundColor","zoomOnScroll","containerStyle","width","margin","height","border","onRegionTipShow","this","props","regionTipShow","onRegionClick","handleClick","containerClassName","regionStyle","initial","fill","hover","cursor","React","Component","App","e","countryCode","state","currentCountryObj","currentCountry","population","area","callNotification","setState","playerCoins","newRound","type","makeNotification","title","message","duration","store","addNotification","container","animationIn","animationOut","dismiss","code","preventDefault","countriesArr","currentContinent","currentBordering","axios","get","then","response","data","getRandomCountry","catch","error","console","log","randCountry","Math","floor","random","length","alpha2Code","toUpperCase","region","borders","displayStr","join","name","onClick","getHint","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6aed4ffd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { VectorMap } from \"react-jvectormap\";\r\n\r\nclass CreateMap extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"map-wrapper\">\r\n        <VectorMap\r\n          map={\"world_mill\"}\r\n          backgroundColor=\"transparent\"\r\n          zoomOnScroll={true}\r\n          containerStyle={{\r\n            width: \"95%\",\r\n            margin: \"0 auto\",\r\n            height: \"80vh\",\r\n            border: \"5px solid #131318\",\r\n          }}\r\n          onRegionTipShow={this.props.regionTipShow}\r\n          onRegionClick={this.props.handleClick}\r\n          containerClassName=\"map\"\r\n          regionStyle={{\r\n            initial: {\r\n              fill: \"#222230\",\r\n              \"fill-opacity\": 1,\r\n            },\r\n            hover: {\r\n              \"fill-opacity\": 0.7,\r\n              cursor: \"cursor\",\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateMap;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport CreateMap from \"./Components/CreateMap\";\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport { store } from \"react-notifications-component\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countriesArr: [],\n      currentCountryObj: {},\n      currentCountry: \"\",\n      currentContinent: \"?\",\n      currentBordering: \"?\",\n      playerCoins: 10,\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"https://restcountries.eu/rest/v2/all\")\n      .then((response) => {\n        this.setState({ countriesArr: response.data });\n        this.getRandomCountry();\n      })\n      .catch((error) => console.log(error));\n  }\n\n  getRandomCountry() {\n    const { countriesArr } = this.state;\n\n    let randCountry =\n      countriesArr[Math.floor(Math.random() * countriesArr.length)];\n    while (randCountry.area < 14500.0) {\n      randCountry =\n        countriesArr[Math.floor(Math.random() * countriesArr.length)];\n    }\n    this.setState({\n      currentCountryObj: randCountry,\n      currentCountry: randCountry.alpha2Code.toUpperCase(),\n    });\n  }\n\n  newRound() {\n    this.setState({\n      currentContinent: \"?\",\n      currentBordering: \"?\",\n    });\n    this.getRandomCountry();\n  }\n\n  handleClick = (e, countryCode) => {\n    const { currentCountryObj, currentCountry } = this.state;\n    if (countryCode === currentCountry) {\n      if (\n        currentCountryObj.population < 10000000 &&\n        currentCountryObj.area < 210000.0\n      ) {\n        this.callNotification(\"corrHardCountry\");\n        this.setState({ playerCoins: this.state.playerCoins + 10 });\n      } else {\n        this.callNotification(\"corrNormCountry\");\n        this.setState({ playerCoins: this.state.playerCoins + 3 });\n      }\n    } else {\n      this.callNotification(\"wrongCountry\");\n      this.setState({ playerCoins: this.state.playerCoins - 1 });\n    }\n    this.newRound();\n  };\n\n  callNotification = (type) => {\n    if (type === \"corrNormCountry\") {\n      this.makeNotification(\n        \"Great!\",\n        \"You have found the country, you got 3 coins!\",\n        \"success\",\n        3500\n      );\n    } else if (type === \"corrHardCountry\") {\n      this.makeNotification(\n        \"Amazing!\",\n        \"You have found difficult country, you got 10 coins!\",\n        \"success\",\n        3500\n      );\n    } else if (type === \"wrongCountry\") {\n      this.makeNotification(\n        \"Wrong!\",\n        \"You chose the wrong country, deducting 1 coin!\",\n        \"danger\",\n        3500\n      );\n    } else if (type === \"contHintUsed\") {\n      this.makeNotification(\n        \"Heads up!\",\n        \"You have used Continent Hint, removing 1 coin!\",\n        \"info\",\n        3500\n      );\n    } else if (type === \"bordHintUsed\") {\n      this.makeNotification(\n        \"Heads up!\",\n        \"You have used Bordering Countries Hint, removing 4 coins!\",\n        \"info\",\n        3500\n      );\n    }\n  };\n\n  makeNotification = (title, message, type, duration) => {\n    store.addNotification({\n      title: title,\n      message: message,\n      type: type,\n      container: \"bottom-left\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: duration,\n      },\n    });\n  };\n\n  regionTipShow = (e, countryCode, code) => {\n    e.preventDefault();\n  };\n\n  getHint(type) {\n    const { currentCountryObj, playerCoins } = this.state;\n    if (type === \"continent\") {\n      if (playerCoins >= 1) {\n        this.callNotification(\"contHintUsed\");\n        this.setState({\n          currentContinent: currentCountryObj.region,\n          playerCoins: this.state.playerCoins - 1,\n        });\n      }\n    } else if (type === \"bordering\") {\n      if (playerCoins >= 4) {\n        if (currentCountryObj.borders.length > 0) {\n          this.callNotification(\"bordHintUsed\");\n          let displayStr = currentCountryObj.borders.join(\", \");\n          this.setState({\n            currentBordering: displayStr,\n            playerCoins: this.state.playerCoins - 4,\n          });\n        } else {\n          this.setState({ currentBordering: \"No bordering countries.\" });\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactNotification />\n        <div className=\"game-information\">\n          <div className=\"game-information-wrapper\">\n            <div className=\"game-objective\">\n              <div className=\"game-country game-div\">\n                Find: <span>{this.state.currentCountryObj.name}</span>\n              </div>\n              <div className=\"game-continent game-div\">\n                Continent: <span>{this.state.currentContinent}</span>\n              </div>\n              <div className=\"game-bordering game-div\">\n                Bordering Countries: <span>{this.state.currentBordering}</span>\n              </div>\n            </div>\n            <div className=\"game-details\">\n              <div className=\"game-coins\">\n                Coins: <span>{this.state.playerCoins}</span>\n              </div>\n              <div className=\"game-hint\">\n\n                <div\n                  className={\n                    \"hint-cont hint-btn \" +\n                    (this.state.currentContinent !== \"?\" ? \"used\" : \"avail\")}\n                  onClick={() => this.getHint(\"continent\")}>\n                  Get Continent\n                </div>\n\n                <div\n                  className={\n                    \"hint-border hint-btn \" +\n                    (this.state.currentBordering !== \"?\" ? \"used\" : \"avail\")}\n                  onClick={() => this.getHint(\"bordering\")}>\n                  Get bordering countries\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <CreateMap\n          currentCountry={this.state.currentCountry}\n          handleClick={this.handleClick}\n          regionTipShow={this.regionTipShow}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}