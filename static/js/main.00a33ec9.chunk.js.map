{"version":3,"sources":["helpers/notifications.js","state/action/coinActions.js","api/countries.js","components/WorldMapDisplay.js","components/HintBtn.js","components/HintDisplay.js","config/hints.constant.js","components/GameInfo.js","state/action/hintActions.js","helpers/general.js","App.js","state/action/allCountryActions.js","state/action/currentCountryActions.js","reportWebVitals.js","state/reducers/coinReducer.js","state/reducers/hintReducer.js","state/reducers/allCountriesReducer.js","state/reducers/currentCountryReducer.js","state/reducers/index.js","state/store.js","index.js"],"names":["correctGuessNotif","type","amount","toast","success","deductCoins","payload","baseUrl","getAll","a","axios","get","res","data","getByCC","cc","connect","state","coins","country","currentCountry","dispatch","addCoins","newRound","className","map","worldMill","backgroundColor","zoomOnScroll","style","width","height","onRegionTipShow","e","preventDefault","onRegionClick","countryCode","cca2","population","area","error","containerClassName","regionStyle","initial","fill","hover","cursor","HintBtn","text","used","getHint","onClick","HintDisplay","hint","src","alt","hintsConfig","continent","displayText","btnText","cost","bordering","capital","flag","hints","countries","completeHint","hintType","hasBorderingCountries","borders","length","hasCapital","hasContinents","continents","flags","svg","png","join","borderingCountries","currCountry","cca3","filter","name","common","getCountryName","info","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","pauseOnHover","Object","keys","resetHints","setAllCountries","countryService","setCurrentCountry","useEffect","getRandomCountry","randCountry","Math","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","initialState","hintReducer","allCountriesReducer","currentCountryReducer","reducers","combineReducers","coinReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAkBA,SAASA,EAAkBC,EAAMC,GAC/BC,IAAMC,QAAN,2BACsBH,EADtB,4BAC8CC,EAD9C,YAEIA,EAAS,EAAI,QAAU,OAF3B,sB,2BCdWG,EAAc,SAACH,GAAD,MAAa,CACtCD,KAAM,SACNK,QAASJ,I,wCCLLK,EAAU,iCAYD,GAAEC,OAVL,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IAAN,UAAaJ,EAAb,SADL,cACPK,EADO,yBAENA,EAAIC,MAFE,2CAAH,qDAUaC,QALZ,uCAAG,WAAOC,GAAP,eAAAN,EAAA,sEACIC,IAAMC,IAAN,UAAaJ,EAAb,kBAA8BQ,IADlC,cACRH,EADQ,yBAEPA,EAAIC,MAFG,2CAAH,uD,MC+Cb,IAUeG,eAVS,SAACC,GAAD,MAAY,CAClCC,MAAOD,EAAMC,MACbC,QAASF,EAAMG,mBAGU,SAACC,GAAD,MAAe,CACxCC,SAAU,SAACpB,GAAD,OAAYmB,EF9DA,SAACnB,GAAD,MAAa,CACnCD,KAAM,MACNK,QAASJ,GE4DsBoB,CAASpB,KACxCG,YAAa,SAACH,GAAD,OAAYmB,EAAShB,EAAYH,QAGjCc,EA1Df,YAAwE,IAA7CG,EAA4C,EAA5CA,QAASI,EAAmC,EAAnCA,SAAUD,EAAyB,EAAzBA,SAAUjB,EAAe,EAAfA,YAoBtD,OACE,qBAAKmB,UAAU,WAAf,SACE,cAAC,YAAD,CACEC,IAAKC,EACLC,gBAAgB,cAChBC,cAAc,EACdC,MAAO,CACLC,MAAO,OACPC,OAAQ,uBAEVC,gBAAiB,SAACC,GAAD,OAAOA,EAAEC,kBAC1BC,cA9Bc,SAACF,EAAGG,GACF,QAAhBA,IACFA,EAAc,MAEZA,IAAgBjB,EAAQkB,KACtBlB,EAAQmB,WAAa,KAAYnB,EAAQoB,KAAO,MAClDvC,EAAkB,kBAAmB,IACrCsB,EAAS,MAETtB,EAAkB,kBAAmB,GACrCsB,EAAS,KHQfnB,IAAMqC,MAAM,kDGJRnC,EAAY,IAEdkB,KAeIkB,mBAAmB,MACnBC,YAAa,CACXC,QAAS,CACPC,KAAM,UACN,eAAgB,GAElBC,MAAO,CACL,eAAgB,GAChBC,OAAQ,kBCrCLC,MAXf,YAAiD,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,QAASjD,EAAQ,EAARA,KACtC,OACE,qBACEuB,UAAW,wBAAiBvB,EAAjB,MAA4BgD,EAAO,OAAS,SACvDE,QAAS,kBAAMD,EAAQjD,IAFzB,SAIG+C,KCQQI,MAdf,YAA4C,IAArBJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,KAAMpD,EAAQ,EAARA,KACjC,OACE,qBAAKuB,UAAS,6BAAwBvB,GAAtC,SACY,SAATA,EACC,qCACG+C,EADH,KACU,+BAAOK,OAGjB,qBAAKC,IAAKD,EAAME,IAAI,eAAezB,MAAO,GAAIC,OAAQ,QCmB/CyB,EA3BK,CAClBC,UAAW,CACTxD,KAAM,YACNyD,YAAa,YACbC,QAAS,gBACTC,KAAM,GAERC,UAAW,CACT5D,KAAM,YACNyD,YAAa,sBACbC,QAAS,0BACTC,KAAM,GAERE,QAAS,CACP7D,KAAM,UACNyD,YAAa,eACbC,QAAS,mBACTC,KAAM,GAERG,KAAM,CACJ9D,KAAM,OACNyD,YAAa,GACbC,QAAS,WACTC,KAAM,KC4HV,IAYe5C,eAZS,SAACC,GAAD,MAAY,CAClCC,MAAOD,EAAMC,MACb8C,MAAO/C,EAAM+C,MACbC,UAAWhD,EAAMgD,UACjB9C,QAASF,EAAMG,mBAGU,SAACC,GAAD,MAAe,CACxChB,YAAa,SAACH,GAAD,OAAYmB,EAAShB,EAAYH,KAC9CgE,aAAc,SAACC,GAAD,OAAc9C,EC5JF,SAAC8C,GAAD,MAAe,CACzClE,KAAM,WACNoD,KAAMc,GD0J+BD,CAAaC,QAGrCnD,EAjJf,YAOI,IANFiD,EAMC,EANDA,UACA9C,EAKC,EALDA,QACAD,EAIC,EAJDA,MACAb,EAGC,EAHDA,YACA2D,EAEC,EAFDA,MACAE,EACC,EADDA,aAEME,EAAwBjD,EAAQkD,SAAWlD,EAAQkD,QAAQC,OAAS,EACpEC,EAAapD,EAAQ2C,SAAW3C,EAAQ2C,QAAQQ,OAAS,EACzDE,EAAgBrD,EAAQsD,YAActD,EAAQsD,WAAWH,OAAS,EAElEP,EAAO5C,EAAQuD,MAAMC,KAAOxD,EAAQuD,MAAME,IAC1CH,EAAaD,EAAgBrD,EAAQsD,WAAWI,KAAK,MAAQ,KAC7Df,EAAUS,EAAapD,EAAQ2C,QAAQe,KAAK,MAAQ,KACpDC,EAAqBV,EACvBjD,EAAQkD,QACL5C,KAAI,SAACsD,GAAD,OE/BN,SAAwBd,EAAWe,GAExC,OADgBf,EAAUgB,QAAO,SAAC9D,GAAD,OAAaA,EAAQ6D,OAASA,KAChD,GAAGE,KAAKC,OF4DdC,CAAenB,EA/BkBc,MACnCF,KAAK,MACR,KAEJ,SAAS3B,EAAQiB,GAAW,IPjCPlE,EAAMC,EOkCN2D,EAA6BL,EAA7BK,UAAWC,EAAkBN,EAAlBM,QAASC,EAASP,EAATO,KACvC,GACEI,IAF8CX,EAAxCC,UAEiBxD,MACvBkE,IAAaN,EAAU5D,MACvBkE,IAAaL,EAAQ7D,MACrBkE,IAAaJ,EAAK9D,KAClB,CACA,GAAIiB,GAASsC,EAAYW,GAAUP,KACjC,OAAIO,IAAaN,EAAU5D,MAASmE,GAKpCF,EAAaV,EAAYW,GAAUlE,MACnCI,EAAYmD,EAAYW,GAAUP,MPhDnB3D,EOiDD,IAAD,OACPuD,EAAYW,GAAUR,QADf,KPjDQzD,EOmDnBsD,EAAYW,GAAUP,UPlD9BzD,IAAMkF,KAAN,wBACmBpF,EADnB,4BAC2CC,EAD3C,YAEIA,EAAS,EAAI,QAAU,OAF3B,QO0CQgE,EAAaV,EAAYW,GAAUlE,WP9B3CE,IAAMkF,KAAK,wDAJXlF,IAAMqC,MAAM,kDOsDZ,OACE,qCACE,cAAC,IAAD,CACE8C,SAAS,eACTC,UAAW,KACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,cAAY,IAEbC,OAAOC,KAAK5E,GAASmD,OAAS,GAC7B,wBAAQ9C,UAAU,cAAlB,SACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,oCAAf,UACE,sBAAKA,UAAU,6BAAf,mBACQ,+BAAOL,EAAQ+D,KAAKC,YAE3BnB,EAAMD,MACL,cAAC,EAAD,CAAaV,KAAMU,EAAM9D,KAAMuD,EAAYO,KAAK9D,OAEjD+D,EAAMP,WACL,cAAC,EAAD,CACET,KAAMQ,EAAYC,UAAUC,YAC5BL,KAAMoB,EACNxE,KAAMuD,EAAYC,UAAUxD,OAG/B+D,EAAMF,SACL,cAAC,EAAD,CACEd,KAAMQ,EAAYM,QAAQJ,YAC1BL,KAAMS,EACN7D,KAAMuD,EAAYM,QAAQ7D,OAG7B+D,EAAMH,WAAaO,GAClB,cAAC,EAAD,CACEpB,KAAMQ,EAAYK,UAAUH,YAC5BL,KAAMyB,EACN7E,KAAMuD,EAAYK,UAAU5D,UAIlC,sBAAKuB,UAAU,kCAAf,UACE,sBAAKA,UAAU,WAAf,oBACS,+BAAON,OAEhB,sBAAKM,UAAU,UAAf,UACE,cAAC,EAAD,CACEwB,KAAMQ,EAAYC,UAAUE,QAC5BV,KAAMe,EAAMP,UACZP,QAASA,EACTjD,KAAMuD,EAAYC,UAAUxD,OAE9B,cAAC,EAAD,CACE+C,KAAMQ,EAAYK,UAAUF,QAC5BV,KAAMe,EAAMH,UACZX,QAASA,EACTjD,KAAMuD,EAAYK,UAAU5D,OAE9B,cAAC,EAAD,CACE+C,KAAMQ,EAAYM,QAAQH,QAC1BV,KAAMe,EAAMF,QACZZ,QAASA,EACTjD,KAAMuD,EAAYM,QAAQ7D,OAE5B,cAAC,EAAD,CACE+C,KAAMQ,EAAYO,KAAKJ,QACvBV,KAAMe,EAAMD,KACZb,QAASA,EACTjD,KAAMuD,EAAYO,KAAK9D,wBGhFzC,IAWee,eAXS,SAACC,GAAD,MAAY,CAClCgD,UAAWhD,EAAMgD,UACjB7C,eAAgBH,EAAMG,mBAGG,SAACC,GAAD,MAAe,CACxC2E,WAAY,kBAAM3E,EFzDa,CAC/BpB,KAAM,WEyDNgG,gBAAiB,SAAChC,GAAD,OAAe5C,EC5DhC,uCAAO,WAAOA,GAAP,eAAAZ,EAAA,sEACmByF,EAAe1F,SADlC,OACCyD,EADD,OAEL5C,EAAS,CACPpB,KAAM,oBACNK,QAAS2D,IAJN,2CAAP,wDD6DAkC,kBAAmB,SAAChF,GAAD,OAAaE,EEhED,SAACF,GAAD,MAAc,CAC7ClB,KAAM,sBACNK,QAASa,GF8DgCgF,CAAkBhF,QAG9CH,EAxDf,YAMI,IALFiD,EAKC,EALDA,UACA+B,EAIC,EAJDA,WACAC,EAGC,EAHDA,gBACA7E,EAEC,EAFDA,eACA+E,EACC,EADDA,kBAEAC,qBAAU,WACRH,MACC,IAEHG,qBAAU,WACJnC,EAAUK,OAAS,GACrB+B,MAED,CAACpC,IAEJ,IAAMoC,EAAmB,WAEvB,IADA,IAAIC,EAAcrC,EAAUsC,KAAKC,MAAMD,KAAKE,SAAWxC,EAAUK,SAC1DgC,EAAY/D,KAAO,OAAW+D,EAAYhE,WAAa,KAC5DgE,EAAcrC,EAAUsC,KAAKC,MAAMD,KAAKE,SAAWxC,EAAUK,SAE/D6B,EAAkBG,IAQpB,OACE,mCACGR,OAAOC,KAAK3E,GAAgBkD,OAAS,GACpC,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACE/C,SAXO,WACf8E,IACAL,MAUa5E,EAAe8D,KAAKC,gBGpCtBuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCICQ,EAXC,WAAyB,IAAxBlG,EAAuB,uDAAf,GAAImG,EAAW,uCACtC,OAAQA,EAAOnH,MACb,IAAK,MACH,OAAOgB,EAAQmG,EAAO9G,QACxB,IAAK,SACH,OAAOW,EAAQmG,EAAO9G,QACxB,QACE,OAAOW,I,gBCPPoG,EAAe,CACnB5D,WAAW,EACXI,WAAW,EACXC,SAAS,EACTC,MAAM,GAcOuD,EAXK,WAAmC,IAAlCrG,EAAiC,uDAAzBoG,EAAcD,EAAW,uCACpD,OAAQA,EAAOnH,MACb,IAAK,WACH,OAAO,2BAAKgB,GAAZ,kBAAoBmG,EAAO/D,MAAO,IACpC,IAAK,QACH,OAAOgE,EACT,QACE,OAAOpG,ICLEsG,EATa,WAAyB,IAAxBtG,EAAuB,uDAAf,GAAImG,EAAW,uCAClD,OAAQA,EAAOnH,MACb,IAAK,oBACH,OAAOmH,EAAO9G,QAChB,QACE,OAAOW,ICIEuG,EATe,WAAyB,IAAxBvG,EAAuB,uDAAf,GAAImG,EAAW,uCACpD,OAAQA,EAAOnH,MACb,IAAK,sBACH,OAAOmH,EAAO9G,QAChB,QACE,OAAOW,ICQEwG,EAPEC,YAAgB,CAC/BxG,MAAOyG,EACP3D,MAAOsD,EACPrD,UAAWsD,EACXnG,eAAgBoG,I,QCNLI,EAAQC,YAAYJ,EAAU,GAAIK,YAAgBC,M,MCK/DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1B1B,M","file":"static/js/main.00a33ec9.chunk.js","sourcesContent":["import { toast } from \"react-toastify\";\r\n\r\nfunction usedHintNotif(type, amount) {\r\n  toast.info(\r\n    `You have used ${type} Hint, deducting ${amount} ${\r\n      amount > 1 ? \"coins\" : \"coin\"\r\n    }!`\r\n  );\r\n}\r\n\r\nfunction notEnoughCoinsNotif() {\r\n  toast.error(\"You don't have enough coins to use this hint.\");\r\n}\r\n\r\nfunction noBorderingNotif() {\r\n  toast.info(\"This country does not have any bordering countries.\");\r\n}\r\n\r\nfunction correctGuessNotif(type, amount) {\r\n  toast.success(\r\n    `You have guessed ${type} country, adding ${amount} ${\r\n      amount > 1 ? \"coins\" : \"coin\"\r\n    } to your account!`\r\n  );\r\n}\r\n\r\nfunction wrongGuessNotif() {\r\n  toast.error(\"You chose the wrong country, deducting 1 coin!\");\r\n}\r\n\r\nexport {\r\n  usedHintNotif,\r\n  notEnoughCoinsNotif,\r\n  noBorderingNotif,\r\n  correctGuessNotif,\r\n  wrongGuessNotif,\r\n};\r\n","export const addCoins = (amount) => ({\r\n  type: \"ADD\",\r\n  payload: amount,\r\n});\r\n\r\nexport const deductCoins = (amount) => ({\r\n  type: \"DEDUCT\",\r\n  payload: amount,\r\n});\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://restcountries.com/v3.1\";\r\n\r\nconst getAll = async () => {\r\n  const res = await axios.get(`${baseUrl}/all`);\r\n  return res.data;\r\n};\r\n\r\nconst getByCC = async (cc) => {\r\n  const res = await axios.get(`${baseUrl}/alpha/${cc}`);\r\n  return res.data;\r\n};\r\n\r\nexport default { getAll, getByCC };\r\n","import { correctGuessNotif, wrongGuessNotif } from \"../helpers/notifications\";\r\nimport { VectorMap } from \"@react-jvectormap/core\";\r\nimport worldMill from \"@react-jvectormap/world/dist/worldMill.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { addCoins, deductCoins } from \"../state/action/index\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction WorldMapDisplay({ country, newRound, addCoins, deductCoins }) {\r\n  const handleClick = (e, countryCode) => {\r\n    if (countryCode === \"94c\") {\r\n      countryCode = \"US\";\r\n    }\r\n    if (countryCode === country.cca2) {\r\n      if (country.population < 10000000 && country.area < 210000.0) {\r\n        correctGuessNotif(\"hard difficulty\", 10);\r\n        addCoins(10);\r\n      } else {\r\n        correctGuessNotif(\"easy difficulty\", 3);\r\n        addCoins(3);\r\n      }\r\n    } else {\r\n      wrongGuessNotif();\r\n      deductCoins(1);\r\n    }\r\n    newRound();\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-map\">\r\n      <VectorMap\r\n        map={worldMill}\r\n        backgroundColor=\"transparent\"\r\n        zoomOnScroll={true}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"calc(100vh - 135px)\",\r\n        }}\r\n        onRegionTipShow={(e) => e.preventDefault()}\r\n        onRegionClick={handleClick}\r\n        containerClassName=\"map\"\r\n        regionStyle={{\r\n          initial: {\r\n            fill: \"#222230\",\r\n            \"fill-opacity\": 1,\r\n          },\r\n          hover: {\r\n            \"fill-opacity\": 0.7,\r\n            cursor: \"cursor\",\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  coins: state.coins,\r\n  country: state.currentCountry,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addCoins: (amount) => dispatch(addCoins(amount)),\r\n  deductCoins: (amount) => dispatch(deductCoins(amount)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorldMapDisplay);\r\n","function HintBtn({ text, used, getHint, type }) {\r\n  return (\r\n    <div\r\n      className={`hint-btn hint-${type} ` + (used ? \"used\" : \"avail\")}\r\n      onClick={() => getHint(type)}\r\n    >\r\n      {text}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HintBtn;\r\n","function HintDisplay({ text, hint, type }) {\r\n  return (\r\n    <div className={`go-block go-block--${type}`}>\r\n      {type !== \"flag\" ? (\r\n        <>\r\n          {text}: <span>{hint}</span>\r\n        </>\r\n      ) : (\r\n        <img src={hint} alt=\"country flag\" width={90} height={50} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HintDisplay;\r\n","const hintsConfig = {\r\n  continent: {\r\n    type: \"continent\",\r\n    displayText: \"Continent\",\r\n    btnText: \"Get Continent\",\r\n    cost: 1,\r\n  },\r\n  bordering: {\r\n    type: \"bordering\",\r\n    displayText: \"Bordering Countries\",\r\n    btnText: \"Get bordering countries\",\r\n    cost: 4,\r\n  },\r\n  capital: {\r\n    type: \"capital\",\r\n    displayText: \"Capital city\",\r\n    btnText: \"Get capital city\",\r\n    cost: 1,\r\n  },\r\n  flag: {\r\n    type: \"flag\",\r\n    displayText: \"\",\r\n    btnText: \"Get flag\",\r\n    cost: 10,\r\n  },\r\n};\r\n\r\nexport default hintsConfig;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  usedHintNotif,\r\n  notEnoughCoinsNotif,\r\n  noBorderingNotif,\r\n} from \"../helpers/notifications\";\r\nimport { connect } from \"react-redux\";\r\nimport { deductCoins, completeHint } from \"../state/action/index\";\r\nimport { getCountryName } from \"../helpers/general\";\r\nimport HintBtn from \"./HintBtn\";\r\nimport HintDisplay from \"./HintDisplay\";\r\nimport hintsConfig from \"../config/hints.constant\";\r\n\r\nfunction GameInfo({\r\n  countries,\r\n  country,\r\n  coins,\r\n  deductCoins,\r\n  hints,\r\n  completeHint,\r\n}) {\r\n  const hasBorderingCountries = country.borders && country.borders.length > 0;\r\n  const hasCapital = country.capital && country.capital.length > 0;\r\n  const hasContinents = country.continents && country.continents.length > 0;\r\n\r\n  const flag = country.flags.svg || country.flags.png;\r\n  const continents = hasContinents ? country.continents.join(\", \") : null;\r\n  const capital = hasCapital ? country.capital.join(\", \") : null;\r\n  const borderingCountries = hasBorderingCountries\r\n    ? country.borders\r\n        .map((currCountry) => findBordering(currCountry))\r\n        .join(\", \")\r\n    : null;\r\n\r\n  function getHint(hintType) {\r\n    const { continent, bordering, capital, flag } = hintsConfig;\r\n    if (\r\n      hintType === continent.type ||\r\n      hintType === bordering.type ||\r\n      hintType === capital.type ||\r\n      hintType === flag.type\r\n    ) {\r\n      if (coins >= hintsConfig[hintType].cost) {\r\n        if (hintType === bordering.type && !hasBorderingCountries) {\r\n          completeHint(hintsConfig[hintType].type);\r\n          noBorderingNotif();\r\n          return;\r\n        }\r\n        completeHint(hintsConfig[hintType].type);\r\n        deductCoins(hintsConfig[hintType].cost);\r\n        usedHintNotif(\r\n          `'${hintsConfig[hintType].btnText}'`,\r\n          hintsConfig[hintType].cost\r\n        );\r\n        return;\r\n      }\r\n      notEnoughCoinsNotif();\r\n    }\r\n  }\r\n\r\n  function findBordering(cca3) {\r\n    return getCountryName(countries, cca3);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        pauseOnHover\r\n      />\r\n      {Object.keys(country).length > 0 && (\r\n        <header className=\"game-header\">\r\n          <div className=\"gh-wrapper\">\r\n            <div className=\"game-block-wrapper game-objective\">\r\n              <div className=\"go-block go-block--country\">\r\n                Find: <span>{country.name.common}</span>\r\n              </div>\r\n              {hints.flag && (\r\n                <HintDisplay hint={flag} type={hintsConfig.flag.type} />\r\n              )}\r\n              {hints.continent && (\r\n                <HintDisplay\r\n                  text={hintsConfig.continent.displayText}\r\n                  hint={continents}\r\n                  type={hintsConfig.continent.type}\r\n                />\r\n              )}\r\n              {hints.capital && (\r\n                <HintDisplay\r\n                  text={hintsConfig.capital.displayText}\r\n                  hint={capital}\r\n                  type={hintsConfig.capital.type}\r\n                />\r\n              )}\r\n              {hints.bordering && hasBorderingCountries && (\r\n                <HintDisplay\r\n                  text={hintsConfig.bordering.displayText}\r\n                  hint={borderingCountries}\r\n                  type={hintsConfig.bordering.type}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"game-block-wrapper game-details\">\r\n              <div className=\"gd-coins\">\r\n                Coins: <span>{coins}</span>\r\n              </div>\r\n              <div className=\"gd-hint\">\r\n                <HintBtn\r\n                  text={hintsConfig.continent.btnText}\r\n                  used={hints.continent}\r\n                  getHint={getHint}\r\n                  type={hintsConfig.continent.type}\r\n                />\r\n                <HintBtn\r\n                  text={hintsConfig.bordering.btnText}\r\n                  used={hints.bordering}\r\n                  getHint={getHint}\r\n                  type={hintsConfig.bordering.type}\r\n                />\r\n                <HintBtn\r\n                  text={hintsConfig.capital.btnText}\r\n                  used={hints.capital}\r\n                  getHint={getHint}\r\n                  type={hintsConfig.capital.type}\r\n                />\r\n                <HintBtn\r\n                  text={hintsConfig.flag.btnText}\r\n                  used={hints.flag}\r\n                  getHint={getHint}\r\n                  type={hintsConfig.flag.type}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  coins: state.coins,\r\n  hints: state.hints,\r\n  countries: state.countries,\r\n  country: state.currentCountry,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deductCoins: (amount) => dispatch(deductCoins(amount)),\r\n  completeHint: (hintType) => dispatch(completeHint(hintType)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameInfo);\r\n","export const completeHint = (hintType) => ({\r\n  type: \"USE_HINT\",\r\n  hint: hintType,\r\n});\r\n\r\nexport const resetHints = () => ({\r\n  type: \"RESET\",\r\n});\r\n","export function getCountryName(countries, cca3) {\r\n  const country = countries.filter((country) => country.cca3 === cca3);\r\n  return country[0].name.common;\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport WorldMapDisplay from \"./components/WorldMapDisplay\";\nimport GameInfo from \"./components/GameInfo\";\nimport { connect } from \"react-redux\";\nimport {\n  resetHints,\n  setAllCountries,\n  setCurrentCountry,\n} from \"./state/action/index\";\n\nfunction App({\n  countries,\n  resetHints,\n  setAllCountries,\n  currentCountry,\n  setCurrentCountry,\n}) {\n  useEffect(() => {\n    setAllCountries();\n  }, []);\n\n  useEffect(() => {\n    if (countries.length > 0) {\n      getRandomCountry();\n    }\n  }, [countries]);\n\n  const getRandomCountry = () => {\n    let randCountry = countries[Math.floor(Math.random() * countries.length)];\n    while (randCountry.area < 14500.0 && randCountry.population < 1000000) {\n      randCountry = countries[Math.floor(Math.random() * countries.length)];\n    }\n    setCurrentCountry(randCountry);\n  };\n\n  const newRound = () => {\n    getRandomCountry();\n    resetHints();\n  };\n\n  return (\n    <>\n      {Object.keys(currentCountry).length > 0 && (\n        <>\n          <GameInfo />\n          <WorldMapDisplay\n            newRound={newRound}\n            key={currentCountry.name.common}\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  countries: state.countries,\n  currentCountry: state.currentCountry,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetHints: () => dispatch(resetHints()),\n  setAllCountries: (countries) => dispatch(setAllCountries(countries)),\n  setCurrentCountry: (country) => dispatch(setCurrentCountry(country)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import countryService from \"../../api/countries\";\r\n\r\nexport const setAllCountries = () => {\r\n  return async (dispatch) => {\r\n    const countries = await countryService.getAll();\r\n    dispatch({\r\n      type: \"SET_ALL_COUNTRIES\",\r\n      payload: countries,\r\n    });\r\n  };\r\n};\r\n","export const setCurrentCountry = (country) => ({\r\n  type: \"SET_CURRENT_COUNTRY\",\r\n  payload: country,\r\n});\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const reducer = (state = 10, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return state + action.payload;\r\n    case \"DEDUCT\":\r\n      return state - action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const initialState = {\r\n  continent: false,\r\n  bordering: false,\r\n  capital: false,\r\n  flag: false,\r\n};\r\n\r\nconst hintReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"USE_HINT\":\r\n      return { ...state, [action.hint]: true };\r\n    case \"RESET\":\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default hintReducer;\r\n","const allCountriesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"SET_ALL_COUNTRIES\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default allCountriesReducer;\r\n","const currentCountryReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SET_CURRENT_COUNTRY\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentCountryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport coinReducer from \"./coinReducer\";\r\nimport hintReducer from \"./hintReducer\";\r\nimport allCountriesReducer from \"./allCountriesReducer\";\r\nimport currentCountryReducer from \"./currentCountryReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  coins: coinReducer,\r\n  hints: hintReducer,\r\n  countries: allCountriesReducer,\r\n  currentCountry: currentCountryReducer,\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport reducers from \"./reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../src/state/store\";\n\nimport \"./main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}